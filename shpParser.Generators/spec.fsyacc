%{
%}

specs :
    | spec { [s0] }
    | spec "," specs { s0::s2 }

spec :
    | SIMPLE {Simple s0}
    | ZERO {EndOfShape} // 000
    | PENDOWN {PenDown}// 001
    | PENUP {PenUp}// 002
    | DIVIDE "," NUM {Divide s2} // 003
    | MULTIPLY "," NUM {Multiply s2} // 004
    | PUSH {Push} // 005
    | POP {Pop} // 006
    | SUBSHAPE "," pairn {
        let a,b = s2
        Subshape(a,b)
	} // 007 
    | DISPLACEMENT "," xy {
        let a,b = s2
        Displacement(a,b)
        } // 008
    | MANYDISPLACEMENTS "," xys "," ends {
        ManyDisplacements s2
        } // 009
    | OCTANTARC "," pair {
        let a,b = s2
        OctantArc(a,b)
        } // 00A
    | FRACTIONALARC "," tuple5 {
        let a,b,c,d,e = s2
        FractionalArc(a,b,c,d,e)
        } // 00B ¾«Ï¸Ô²»¡
    | BULGEARC "," triple {
         let a,b,c = s2
         BulgeArc(a,b,c)
         } // 00C
    | MANYBULGEARC "," triples "," ends {
         ManyBulgeArc s2
         }  // 00D
    | VERTICALTEXT "," spec{
         VerticalText s2
         } // 00E

pairn :
    | NUM "," NUM {s0,s2}
    | "(" NUM "," NUM ")" {s1,s3}

xy :
    | signnum "," signnum {s0,s2}
    | "(" signnum "," signnum ")" {s1,s3}


signnums :
    | signnum {[s0]}
    | signnum "," signnums {s0::s2}

signnum :
    | NUM { s0 }
    | "-" NUM { -s1 }

%%

%type<ShapeFile> file
%type<Shape list> shps
%type<Shape> shp
%type<int list list> specbytes

%type<string> TITLE 
%type<int> NUM signnum 
%type<int list> signnums specbyte

